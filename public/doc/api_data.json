[  {    "type": "delete",    "url": "api/PATH/TO/DATA.json?key=XXXXXXXXXXXXXXXXXX",    "title": "Write - DELETE",    "name": "Write_data_delete",    "group": "Database",    "description": "<p>To remove data from the database, we can send a DELETE request with the URL of the path from which we'd like to delete data.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "key",            "description": "<p>Users API key.</p>"          }        ]      }    },    "header": {      "examples": [        {          "title": "Request-Example:",          "content": "DELETE -> https://cloud.brilliantlabs.ca/api/users/john.json?key=V8W00npNVa0yDvhDRp48pLK1bKPW79xnbBoA5ak",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "Request",            "description": "<p>A successful DELETE request will be indicated by a 200 OK HTTP status code with a response containing JSON null.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<ul><li>Unable to parse PUT or POST data.</li><li>Missing PUT or POST data.</li><li>The request attempts to PUT or POST data that is too large.</li><li>The REST API call contains invalid child names as part of the path.</li><li>The REST API call path is too long.</li><li>The request contains an unrecognized server value.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<ul><li>The API key used in the request is invalid.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InternalServerError",            "description": "<ul><li>The server returned an error. See the error message for further details.</li></ul>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"Unable to parse PUT or POST data\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/api.js",    "groupTitle": "Database"  },  {    "type": "patch",    "url": "api/PATH/TO/DATA.json?key=XXXXXXXXXXXXXXXXXX",    "title": "Write - PATCH",    "name": "Write_data_patch",    "group": "Database",    "description": "<p>Using a PATCH request, we can update specific children at a location without overwriting existing data.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "key",            "description": "<p>Users API key.</p>"          }        ]      }    },    "header": {      "examples": [        {          "title": "Request-Example:",          "content": "Current Database Values for users/john.json\n{\n    \"age\": 22\n}\nPATCH -> https://cloud.brilliantlabs.ca/api/users/john.json?key=V8W00npNVa0yDvhDRp48pLK1bKPW79xnbBoA5ak\n{\n    \"height\": 70\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "Response",            "description": "<p>A successful request will be indicated by a 200 OK HTTP status code, and the response will contain the data we patched to the database .</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 200 OK\n{\n    \"age\": 22\n    \"height\": 70\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<ul><li>Unable to parse PUT or POST data.</li><li>Missing PUT or POST data.</li><li>The request attempts to PUT or POST data that is too large.</li><li>The REST API call contains invalid child names as part of the path.</li><li>The REST API call path is too long.</li><li>The request contains an unrecognized server value.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<ul><li>The API key used in the request is invalid.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InternalServerError",            "description": "<ul><li>The server returned an error. See the error message for further details.</li></ul>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"Unable to parse PUT or POST data\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/api.js",    "groupTitle": "Database"  },  {    "type": "patch",    "url": "api/PATH/TO/DATA.json?key=XXXXXXXXXXXXXXXXXX",    "title": "Write - PATCH",    "name": "Write_data_patch",    "group": "Database",    "description": "<p>Using a PATCH request, we can update specific children at a location without overwriting existing data.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "key",            "description": "<p>Users API key.</p>"          }        ]      }    },    "header": {      "examples": [        {          "title": "Request-Example:",          "content": "Current Database Values for users/john.json\n{\n    \"age\": 22\n}\nPATCH -> https://cloud.brilliantlabs.ca/api/users/john.json?key=V8W00npNVa0yDvhDRp48pLK1bKPW79xnbBoA5ak\n{\n    \"height\": 70\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "Response",            "description": "<p>A successful request will be indicated by a 200 OK HTTP status code, and the response will contain the data we patched to the database .</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 200 OK\n{\n    \"age\": 22\n    \"height\": 70\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<ul><li>Unable to parse PUT or POST data.</li><li>Missing PUT or POST data.</li><li>The request attempts to PUT or POST data that is too large.</li><li>The REST API call contains invalid child names as part of the path.</li><li>The REST API call path is too long.</li><li>The request contains an unrecognized server value.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<ul><li>The API key used in the request is invalid.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InternalServerError",            "description": "<ul><li>The server returned an error. See the error message for further details.</li></ul>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"Unable to parse PUT or POST data\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/api.js",    "groupTitle": "Database"  },  {    "type": "post",    "url": "api/PATH/TO/DATA.json?key=XXXXXXXXXXXXXXXXXX",    "title": "Write - POST",    "name": "Write_data_post",    "group": "Database",    "description": "<p>To generate a unique, timestamp-based key for every child added to a database path we can send a POST request.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "key",            "description": "<p>Users API key.</p>"          }        ]      }    },    "header": {      "examples": [        {          "title": "Request-Example:",          "content": "POST -> https://cloud.brilliantlabs.ca/api/users.json?key=V8W00npNVa0yDvhDRp48pLK1bKPW79xnbBoA5ak\n{\n    \"name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"age\": 22\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "Body",            "description": "<p>Notice that the key -JSOpn9ZC54A4P4RoqVa was automatically generated for us because we used a POST request. A successful request will be indicated by a 200 OK HTTP status code, and the response will contain the key of the new data that was added and the timestamp.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 200 OK\n{\n  \"timestamp\": 1562298871,\n  \"name\":\"-JSOpn9ZC54A4P4RoqVa\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<ul><li>Unable to parse PUT or POST data.</li><li>Missing PUT or POST data.</li><li>The request attempts to PUT or POST data that is too large.</li><li>The REST API call contains invalid child names as part of the path.</li><li>The REST API call path is too long.</li><li>The request contains an unrecognized server value.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<ul><li>The API key used in the request is invalid.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InternalServerError",            "description": "<ul><li>The server returned an error. See the error message for further details.</li></ul>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"Unable to parse PUT or POST data\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/api.js",    "groupTitle": "Database"  },  {    "type": "put",    "url": "api/PATH/TO/DATA.json?key=XXXXXXXXXXXXXXXXXX",    "title": "Write - PUT",    "name": "Write_data_put",    "group": "Database",    "description": "<p>Using PUT, we can write a string, number, boolean, array or any JSON object to our database. WARNING: This methods overrides data.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "key",            "description": "<p>Users API key.</p>"          }        ]      }    },    "header": {      "examples": [        {          "title": "Request-Example:",          "content": "PUT -> https://cloud.brilliantlabs.ca/api/users/john.json?key=V8W00npNVa0yDvhDRp48pLK1bKPW79xnbBoA5ak\n{\n    \"age\": 22\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "Response",            "description": "<p>A successful request will be indicated by a 200 OK HTTP status code, and the response will contain the data we wrote to the database.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response Example:",          "content": "HTTP/1.1 200 OK\n{\n    \"age\": 22\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<ul><li>Unable to parse PUT or POST data.</li><li>Missing PUT or POST data.</li><li>The request attempts to PUT or POST data that is too large.</li><li>The REST API call contains invalid child names as part of the path.</li><li>The REST API call path is too long.</li><li>The request contains an unrecognized server value.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<ul><li>The API key used in the request is invalid.</li></ul>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "InternalServerError",            "description": "<ul><li>The server returned an error. See the error message for further details.</li></ul>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"Unable to parse PUT or POST data\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/api.js",    "groupTitle": "Database"  }]
